<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>abtswath</title><link>https://www.abtswath.com/</link><description>Recent content on abtswath</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 10 Aug 2021 17:09:51 +0000</lastBuildDate><atom:link href="https://www.abtswath.com/index.xml" rel="self" type="application/rss+xml"/><item><title>如何将自己的依赖包发布到 Composer Packagist</title><link>https://www.abtswath.com/publish-composer-package-to-packagist/</link><pubDate>Tue, 10 Aug 2021 17:09:51 +0000</pubDate><guid>https://www.abtswath.com/publish-composer-package-to-packagist/</guid><description>准备工作 Github 账号 Packagist 账号 创建 git 仓库 GitHub 创建仓库并克隆到本地。
git clone git@github.com:Great233/url.git composer 初始化 composer init 输入包名称、描述、作者、协议、依赖等信息，回车结束。最终会生成composer.json配置文件，文件内容如下：
{ &amp;#34;name&amp;#34;: &amp;#34;abtswiath/url&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;A library to parse URL, support parameters with the same name&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;library&amp;#34;, &amp;#34;require&amp;#34;: { &amp;#34;php&amp;#34;: &amp;#34;&amp;gt;=7.2&amp;#34; }, &amp;#34;version&amp;#34;: &amp;#34;1.0.0&amp;#34;, &amp;#34;license&amp;#34;: &amp;#34;MIT&amp;#34;, &amp;#34;autoload&amp;#34;: { &amp;#34;psr-4&amp;#34;: { &amp;#34;Url\\&amp;#34;: &amp;#34;src/Url/&amp;#34; } }, &amp;#34;authors&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;Great&amp;#34; } ], &amp;#34;require-dev&amp;#34;: { &amp;#34;phpunit/phpunit&amp;#34;: &amp;#34;^9.5&amp;#34; }, &amp;#34;support&amp;#34;: { &amp;#34;issues&amp;#34;: &amp;#34;https://github.com/Great233/url/issues&amp;#34;, &amp;#34;source&amp;#34;: &amp;#34;https://github.com/Great233/url&amp;#34; } } 提交代码至 Github 代码编写完成并且测试无误之后提交到 Github。</description></item><item><title>openjdk 8 maven 下载项目依赖时遇到的问题</title><link>https://www.abtswath.com/maven-invalid-algorithm-parameter-exception/</link><pubDate>Tue, 27 Jul 2021 17:04:55 +0000</pubDate><guid>https://www.abtswath.com/maven-invalid-algorithm-parameter-exception/</guid><description>错误信息 [ERROR] Plugin org.apache.maven.plugins:maven-surefire-plugin:2.22.2 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-surefire-plugin:jar:2.22.2: Could not transfer artifact org.apache.maven.surefire:surefire:pom:2.22.2 from/to aliyunmaven (https://maven.aliyun.com/repository/public): transfer failed for https://maven.aliyun.com/repository/public/org/apache/maven/surefire/surefire/2.22.2/surefire-2.22.2.pom: java.lang.RuntimeException: Unexpected error: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty -&amp;gt; [Help 1] 截图如下 问题原因及解决方案 报错提示大致是https证书安全检查问题，以下是搜索引擎加自己尝试得出的一些解决方案：
1. 使用 http 的镜像源，例如： &amp;lt;mirror&amp;gt; &amp;lt;id&amp;gt;aliyunmaven&amp;lt;/id&amp;gt; &amp;lt;mirrorOf&amp;gt;*&amp;lt;/mirrorOf&amp;gt; &amp;lt;name&amp;gt;阿里云公共仓库&amp;lt;/name&amp;gt; &amp;lt;url&amp;gt;http://maven.aliyun.com/repository/public&amp;lt;/url&amp;gt; &amp;lt;/mirror&amp;gt; 此方案确实可以解决一部分问题，但还是有些 jar 包会出现同样的错误，具体原因未深究。
2. 生成证书并导入到 jre security 中 首先到处 https 证书，然后使用 keytool 导入证书：</description></item><item><title>Redis 分布式锁之 RedLock</title><link>https://www.abtswath.com/redis-distributed-lock/</link><pubDate>Thu, 22 Jul 2021 21:01:01 +0000</pubDate><guid>https://www.abtswath.com/redis-distributed-lock/</guid><description>使用场景 分布式场景下保证同一时刻内只能有一个客户端对资源进行操作。
保证分布式锁有效性及安全性的要求 互斥性：任何时刻只能有一个客户端持有锁。 可重入：总是可以获取锁，即使锁定资源的客户端崩溃，避免死锁。 高可用：只要大多数 Redis 节点已启动，客户端就可以获取锁和释放锁。 获取锁 以毫秒为单位获取当前时间戳。 以相同的键名和值尝试获取所有实例的锁。 客户端以当前时间减去开始获取锁的时间得到锁使用的时间。当大多数Redis节点（N/2+1）获取到锁并且锁使用时间小于锁的失效时间，锁才算获取成功。 如果获取到锁，锁的真正有效时间为步骤三计算结果。 如果获取锁失败，客户端应该在所有实例上进行解锁。 释放锁 向所有的 Redis 实例发送释放锁的命令，不用关心之前有没有成功获取到锁。</description></item></channel></rss>